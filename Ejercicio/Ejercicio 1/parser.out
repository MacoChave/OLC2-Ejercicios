Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> exp_e
Rule 2     exp_e -> exp_e MAS exp_t
Rule 3     exp_e -> exp_e MENOS exp_t
Rule 4     exp_e -> exp_t
Rule 5     exp_t -> exp_t POR exp_f
Rule 6     exp_t -> exp_t DIV exp_f
Rule 7     exp_t -> exp_f
Rule 8     exp_f -> PARI exp_e PARD
Rule 9     exp_f -> ID

Terminals, with rules where they appear

DIV                  : 6
ID                   : 9
MAS                  : 2
MENOS                : 3
PARD                 : 8
PARI                 : 8
POR                  : 5
error                : 

Nonterminals, with rules where they appear

exp_e                : 1 2 3 8
exp_f                : 5 6 7
exp_t                : 2 3 4 5 6
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . exp_e
    (2) exp_e -> . exp_e MAS exp_t
    (3) exp_e -> . exp_e MENOS exp_t
    (4) exp_e -> . exp_t
    (5) exp_t -> . exp_t POR exp_f
    (6) exp_t -> . exp_t DIV exp_f
    (7) exp_t -> . exp_f
    (8) exp_f -> . PARI exp_e PARD
    (9) exp_f -> . ID

    PARI            shift and go to state 5
    ID              shift and go to state 6

    start                          shift and go to state 1
    exp_e                          shift and go to state 2
    exp_t                          shift and go to state 3
    exp_f                          shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> exp_e .
    (2) exp_e -> exp_e . MAS exp_t
    (3) exp_e -> exp_e . MENOS exp_t

    $end            reduce using rule 1 (start -> exp_e .)
    MAS             shift and go to state 7
    MENOS           shift and go to state 8


state 3

    (4) exp_e -> exp_t .
    (5) exp_t -> exp_t . POR exp_f
    (6) exp_t -> exp_t . DIV exp_f

    MAS             reduce using rule 4 (exp_e -> exp_t .)
    MENOS           reduce using rule 4 (exp_e -> exp_t .)
    $end            reduce using rule 4 (exp_e -> exp_t .)
    PARD            reduce using rule 4 (exp_e -> exp_t .)
    POR             shift and go to state 9
    DIV             shift and go to state 10


state 4

    (7) exp_t -> exp_f .

    POR             reduce using rule 7 (exp_t -> exp_f .)
    DIV             reduce using rule 7 (exp_t -> exp_f .)
    MAS             reduce using rule 7 (exp_t -> exp_f .)
    MENOS           reduce using rule 7 (exp_t -> exp_f .)
    $end            reduce using rule 7 (exp_t -> exp_f .)
    PARD            reduce using rule 7 (exp_t -> exp_f .)


state 5

    (8) exp_f -> PARI . exp_e PARD
    (2) exp_e -> . exp_e MAS exp_t
    (3) exp_e -> . exp_e MENOS exp_t
    (4) exp_e -> . exp_t
    (5) exp_t -> . exp_t POR exp_f
    (6) exp_t -> . exp_t DIV exp_f
    (7) exp_t -> . exp_f
    (8) exp_f -> . PARI exp_e PARD
    (9) exp_f -> . ID

    PARI            shift and go to state 5
    ID              shift and go to state 6

    exp_e                          shift and go to state 11
    exp_t                          shift and go to state 3
    exp_f                          shift and go to state 4

state 6

    (9) exp_f -> ID .

    POR             reduce using rule 9 (exp_f -> ID .)
    DIV             reduce using rule 9 (exp_f -> ID .)
    MAS             reduce using rule 9 (exp_f -> ID .)
    MENOS           reduce using rule 9 (exp_f -> ID .)
    $end            reduce using rule 9 (exp_f -> ID .)
    PARD            reduce using rule 9 (exp_f -> ID .)


state 7

    (2) exp_e -> exp_e MAS . exp_t
    (5) exp_t -> . exp_t POR exp_f
    (6) exp_t -> . exp_t DIV exp_f
    (7) exp_t -> . exp_f
    (8) exp_f -> . PARI exp_e PARD
    (9) exp_f -> . ID

    PARI            shift and go to state 5
    ID              shift and go to state 6

    exp_t                          shift and go to state 12
    exp_f                          shift and go to state 4

state 8

    (3) exp_e -> exp_e MENOS . exp_t
    (5) exp_t -> . exp_t POR exp_f
    (6) exp_t -> . exp_t DIV exp_f
    (7) exp_t -> . exp_f
    (8) exp_f -> . PARI exp_e PARD
    (9) exp_f -> . ID

    PARI            shift and go to state 5
    ID              shift and go to state 6

    exp_t                          shift and go to state 13
    exp_f                          shift and go to state 4

state 9

    (5) exp_t -> exp_t POR . exp_f
    (8) exp_f -> . PARI exp_e PARD
    (9) exp_f -> . ID

    PARI            shift and go to state 5
    ID              shift and go to state 6

    exp_f                          shift and go to state 14

state 10

    (6) exp_t -> exp_t DIV . exp_f
    (8) exp_f -> . PARI exp_e PARD
    (9) exp_f -> . ID

    PARI            shift and go to state 5
    ID              shift and go to state 6

    exp_f                          shift and go to state 15

state 11

    (8) exp_f -> PARI exp_e . PARD
    (2) exp_e -> exp_e . MAS exp_t
    (3) exp_e -> exp_e . MENOS exp_t

    PARD            shift and go to state 16
    MAS             shift and go to state 7
    MENOS           shift and go to state 8


state 12

    (2) exp_e -> exp_e MAS exp_t .
    (5) exp_t -> exp_t . POR exp_f
    (6) exp_t -> exp_t . DIV exp_f

    MAS             reduce using rule 2 (exp_e -> exp_e MAS exp_t .)
    MENOS           reduce using rule 2 (exp_e -> exp_e MAS exp_t .)
    $end            reduce using rule 2 (exp_e -> exp_e MAS exp_t .)
    PARD            reduce using rule 2 (exp_e -> exp_e MAS exp_t .)
    POR             shift and go to state 9
    DIV             shift and go to state 10


state 13

    (3) exp_e -> exp_e MENOS exp_t .
    (5) exp_t -> exp_t . POR exp_f
    (6) exp_t -> exp_t . DIV exp_f

    MAS             reduce using rule 3 (exp_e -> exp_e MENOS exp_t .)
    MENOS           reduce using rule 3 (exp_e -> exp_e MENOS exp_t .)
    $end            reduce using rule 3 (exp_e -> exp_e MENOS exp_t .)
    PARD            reduce using rule 3 (exp_e -> exp_e MENOS exp_t .)
    POR             shift and go to state 9
    DIV             shift and go to state 10


state 14

    (5) exp_t -> exp_t POR exp_f .

    POR             reduce using rule 5 (exp_t -> exp_t POR exp_f .)
    DIV             reduce using rule 5 (exp_t -> exp_t POR exp_f .)
    MAS             reduce using rule 5 (exp_t -> exp_t POR exp_f .)
    MENOS           reduce using rule 5 (exp_t -> exp_t POR exp_f .)
    $end            reduce using rule 5 (exp_t -> exp_t POR exp_f .)
    PARD            reduce using rule 5 (exp_t -> exp_t POR exp_f .)


state 15

    (6) exp_t -> exp_t DIV exp_f .

    POR             reduce using rule 6 (exp_t -> exp_t DIV exp_f .)
    DIV             reduce using rule 6 (exp_t -> exp_t DIV exp_f .)
    MAS             reduce using rule 6 (exp_t -> exp_t DIV exp_f .)
    MENOS           reduce using rule 6 (exp_t -> exp_t DIV exp_f .)
    $end            reduce using rule 6 (exp_t -> exp_t DIV exp_f .)
    PARD            reduce using rule 6 (exp_t -> exp_t DIV exp_f .)


state 16

    (8) exp_f -> PARI exp_e PARD .

    POR             reduce using rule 8 (exp_f -> PARI exp_e PARD .)
    DIV             reduce using rule 8 (exp_f -> PARI exp_e PARD .)
    MAS             reduce using rule 8 (exp_f -> PARI exp_e PARD .)
    MENOS           reduce using rule 8 (exp_f -> PARI exp_e PARD .)
    $end            reduce using rule 8 (exp_f -> PARI exp_e PARD .)
    PARD            reduce using rule 8 (exp_f -> PARI exp_e PARD .)

